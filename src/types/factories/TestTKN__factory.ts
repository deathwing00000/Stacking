/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestTKN, TestTKNInterface } from "../TestTKN";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023e7380380620023e78339818101604052810190620000379190620003e7565b81818160039080519060200190620000519291906200019a565b5080600490805190602001906200006a9291906200019a565b5050506200008d62000081620000c960201b60201c565b620000d160201b60201c565b620000c17f90f6922135b850c3f8f84a42d31957ae3b19ca97f2141abc21ca8532690b595860001b6200019760201b60201c565b5050620004d1565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b828054620001a8906200049b565b90600052602060002090601f016020900481019282620001cc576000855562000218565b82601f10620001e757805160ff191683800117855562000218565b8280016001018555821562000218579182015b8281111562000217578251825591602001919060010190620001fa565b5b5090506200022791906200022b565b5090565b5b80821115620002465760008160009055506001016200022c565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002b38262000268565b810181811067ffffffffffffffff82111715620002d557620002d462000279565b5b80604052505050565b6000620002ea6200024a565b9050620002f88282620002a8565b919050565b600067ffffffffffffffff8211156200031b576200031a62000279565b5b620003268262000268565b9050602081019050919050565b60005b838110156200035357808201518184015260208101905062000336565b8381111562000363576000848401525b50505050565b6000620003806200037a84620002fd565b620002de565b9050828152602081018484840111156200039f576200039e62000263565b5b620003ac84828562000333565b509392505050565b600082601f830112620003cc57620003cb6200025e565b5b8151620003de84826020860162000369565b91505092915050565b6000806040838503121562000401576200040062000254565b5b600083015167ffffffffffffffff81111562000422576200042162000259565b5b6200043085828601620003b4565b925050602083015167ffffffffffffffff81111562000454576200045362000259565b5b6200046285828601620003b4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004b457607f821691505b60208210811415620004cb57620004ca6200046c565b5b50919050565b611f0680620004e16000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d71461029d578063a9059cbb146102cd578063dd62ed3e146102fd578063f2fde38b1461032d57610100565b8063715018a61461023b5780638da5cb5b1461024557806395d89b41146102635780639dc29fac1461028157610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806340c10f19146101ef57806370a082311461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610349565b60405161011a91906114d7565b60405180910390f35b61013d60048036038101906101389190611592565b6103db565b60405161014a91906115ed565b60405180910390f35b61015b6103f9565b6040516101689190611617565b60405180910390f35b61018b60048036038101906101869190611632565b610403565b60405161019891906115ed565b60405180910390f35b6101a96104fb565b6040516101b691906116a1565b60405180910390f35b6101d960048036038101906101d49190611592565b610504565b6040516101e691906115ed565b60405180910390f35b61020960048036038101906102049190611592565b6105b0565b005b610225600480360381019061022091906116bc565b6106be565b6040516102329190611617565b60405180910390f35b610243610706565b005b61024d61078e565b60405161025a91906116f8565b60405180910390f35b61026b6107b8565b60405161027891906114d7565b60405180910390f35b61029b60048036038101906102969190611592565b61084a565b005b6102b760048036038101906102b29190611592565b610958565b6040516102c491906115ed565b60405180910390f35b6102e760048036038101906102e29190611592565b610a43565b6040516102f491906115ed565b60405180910390f35b61031760048036038101906103129190611713565b610a61565b6040516103249190611617565b60405180910390f35b610347600480360381019061034291906116bc565b610ae8565b005b60606003805461035890611782565b80601f016020809104026020016040519081016040528092919081815260200182805461038490611782565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b60006103ef6103e8610be0565b8484610be8565b6001905092915050565b6000600254905090565b6000610410848484610db3565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061045b610be0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d290611826565b60405180910390fd5b6104ef856104e7610be0565b858403610be8565b60019150509392505050565b60006012905090565b60006105a6610511610be0565b84846001600061051f610be0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a19190611875565b610be8565b6001905092915050565b6105b8610be0565b73ffffffffffffffffffffffffffffffffffffffff166105d661078e565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611917565b60405180910390fd5b6106587f7a9b345a7bb3e60157a141af29564788a793c2d06d6509383f586faac08048eb60001b611034565b6106847f3de40afc20d77d07932bbed9a6db5a93ae61220b3cf6111e805821900049a81d60001b611034565b6106b07fb7e0bf2aeeda39493beeada504a03e008374b045004621a19c1f4fccecd3604960001b611034565b6106ba8282611037565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61070e610be0565b73ffffffffffffffffffffffffffffffffffffffff1661072c61078e565b73ffffffffffffffffffffffffffffffffffffffff1614610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077990611917565b60405180910390fd5b61078c6000611197565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107c790611782565b80601f01602080910402602001604051908101604052809291908181526020018280546107f390611782565b80156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b5050505050905090565b610852610be0565b73ffffffffffffffffffffffffffffffffffffffff1661087061078e565b73ffffffffffffffffffffffffffffffffffffffff16146108c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bd90611917565b60405180910390fd5b6108f27fcfe6d418cf7a1ab8020276e087dd76ed212a0c6e09956e8408e8fca22670377f60001b611034565b61091e7fef4a0a6faa17bc5adae7e9cd7b32b2c0e8308b2ad6033600392552ca7b1b995960001b611034565b61094a7f60bb3723390f13a729ef81f16db1730b74751a007140d86c1d2ed303f176e63560001b611034565b610954828261125d565b5050565b60008060016000610967610be0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b906119a9565b60405180910390fd5b610a38610a2f610be0565b85858403610be8565b600191505092915050565b6000610a57610a50610be0565b8484610db3565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610af0610be0565b73ffffffffffffffffffffffffffffffffffffffff16610b0e61078e565b73ffffffffffffffffffffffffffffffffffffffff1614610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b90611917565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611a3b565b60405180910390fd5b610bdd81611197565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90611acd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbf90611b5f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610da69190611617565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1a90611bf1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8a90611c83565b60405180910390fd5b610e9e838383611434565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b90611d15565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fb79190611875565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101b9190611617565b60405180910390a361102e848484611439565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611d81565b60405180910390fd5b6110b360008383611434565b80600260008282546110c59190611875565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461111a9190611875565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161117f9190611617565b60405180910390a361119360008383611439565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c490611e13565b60405180910390fd5b6112d982600083611434565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561135f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135690611ea5565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546113b69190611ec5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161141b9190611617565b60405180910390a361142f83600084611439565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561147857808201518184015260208101905061145d565b83811115611487576000848401525b50505050565b6000601f19601f8301169050919050565b60006114a98261143e565b6114b38185611449565b93506114c381856020860161145a565b6114cc8161148d565b840191505092915050565b600060208201905081810360008301526114f1818461149e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611529826114fe565b9050919050565b6115398161151e565b811461154457600080fd5b50565b60008135905061155681611530565b92915050565b6000819050919050565b61156f8161155c565b811461157a57600080fd5b50565b60008135905061158c81611566565b92915050565b600080604083850312156115a9576115a86114f9565b5b60006115b785828601611547565b92505060206115c88582860161157d565b9150509250929050565b60008115159050919050565b6115e7816115d2565b82525050565b600060208201905061160260008301846115de565b92915050565b6116118161155c565b82525050565b600060208201905061162c6000830184611608565b92915050565b60008060006060848603121561164b5761164a6114f9565b5b600061165986828701611547565b935050602061166a86828701611547565b925050604061167b8682870161157d565b9150509250925092565b600060ff82169050919050565b61169b81611685565b82525050565b60006020820190506116b66000830184611692565b92915050565b6000602082840312156116d2576116d16114f9565b5b60006116e084828501611547565b91505092915050565b6116f28161151e565b82525050565b600060208201905061170d60008301846116e9565b92915050565b6000806040838503121561172a576117296114f9565b5b600061173885828601611547565b925050602061174985828601611547565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179a57607f821691505b602082108114156117ae576117ad611753565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611810602883611449565b915061181b826117b4565b604082019050919050565b6000602082019050818103600083015261183f81611803565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118808261155c565b915061188b8361155c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118c0576118bf611846565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611901602083611449565b915061190c826118cb565b602082019050919050565b60006020820190508181036000830152611930816118f4565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611993602583611449565b915061199e82611937565b604082019050919050565b600060208201905081810360008301526119c281611986565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a25602683611449565b9150611a30826119c9565b604082019050919050565b60006020820190508181036000830152611a5481611a18565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ab7602483611449565b9150611ac282611a5b565b604082019050919050565b60006020820190508181036000830152611ae681611aaa565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b49602283611449565b9150611b5482611aed565b604082019050919050565b60006020820190508181036000830152611b7881611b3c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611bdb602583611449565b9150611be682611b7f565b604082019050919050565b60006020820190508181036000830152611c0a81611bce565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611c6d602383611449565b9150611c7882611c11565b604082019050919050565b60006020820190508181036000830152611c9c81611c60565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611cff602683611449565b9150611d0a82611ca3565b604082019050919050565b60006020820190508181036000830152611d2e81611cf2565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611d6b601f83611449565b9150611d7682611d35565b602082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611dfd602183611449565b9150611e0882611da1565b604082019050919050565b60006020820190508181036000830152611e2c81611df0565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e8f602283611449565b9150611e9a82611e33565b604082019050919050565b60006020820190508181036000830152611ebe81611e82565b9050919050565b6000611ed08261155c565b9150611edb8361155c565b925082821015611eee57611eed611846565b5b82820390509291505056fea164736f6c6343000809000a";

type TestTKNConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTKNConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTKN__factory extends ContractFactory {
  constructor(...args: TestTKNConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestTKN> {
    return super.deploy(name, symbol, overrides || {}) as Promise<TestTKN>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): TestTKN {
    return super.attach(address) as TestTKN;
  }
  connect(signer: Signer): TestTKN__factory {
    return super.connect(signer) as TestTKN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTKNInterface {
    return new utils.Interface(_abi) as TestTKNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTKN {
    return new Contract(address, _abi, signerOrProvider) as TestTKN;
  }
}
